{"ast":null,"code":"import _asyncToGenerator from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/regenerator/index.js\";import{useState}from'react';import GoogleLogin,{GoogleLogout}from\"react-google-login\";import{jsx as _jsx}from\"react/jsx-runtime\";function Authentication(props){var handleLoginFailure=function handleLoginFailure(result){alert(result);};var handleLoginSuccess=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(googleData){var user,loginOptions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:user=JSON.stringify(googleData['profileObj']);localStorage.setItem('user',user);props.setUser(JSON.parse(localStorage.getItem('user')));loginOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(user)};_context2.next=6;return fetch('http://localhost:5050/login',loginOptions).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var _response$headers$get;var isJson,data,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:isJson=(_response$headers$get=response.headers.get('content-type'))===null||_response$headers$get===void 0?void 0:_response$headers$get.includes('application/json');_context.t0=isJson;if(!_context.t0){_context.next=6;break;}_context.next=5;return response.json();case 5:_context.t0=_context.sent;case 6:data=_context.t0;if(response.ok){_context.next=10;break;}// get error message from body or default to response status\nerror=data&&data.message||response.status;return _context.abrupt(\"return\",Promise.reject(error));case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}()).catch(function(error){alert(\"error logging in: \",error);});case 6:props.fetchRecords(JSON.parse(localStorage.getItem('user')));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function handleLoginSuccess(_x){return _ref.apply(this,arguments);};}();var handleLogout=function handleLogout(){localStorage.removeItem('user');props.setUser(null);props.clearData();};return/*#__PURE__*/_jsx(\"div\",{className:\"options-item\",children:props.user?/*#__PURE__*/_jsx(GoogleLogout,{clientId:process.env.REACT_APP_GOOGLE_CLIENT_ID,buttonText:\"Log Out\",onLogoutSuccess:handleLogout,cookiePolicy:'single_host_origin',className:\"auth\"}):/*#__PURE__*/_jsx(GoogleLogin,{clientId:process.env.REACT_APP_GOOGLE_CLIENT_ID,buttonText:\"Log In\",onSuccess:handleLoginSuccess,onFailure:handleLoginFailure,cookiePolicy:'single_host_origin',className:\"auth\"})});}export default Authentication;","map":{"version":3,"sources":["/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/src/Navigation/Authentication.js"],"names":["useState","GoogleLogin","GoogleLogout","Authentication","props","handleLoginFailure","result","alert","handleLoginSuccess","googleData","user","JSON","stringify","localStorage","setItem","setUser","parse","getItem","loginOptions","method","headers","body","fetch","then","response","isJson","get","includes","json","data","ok","error","message","status","Promise","reject","catch","fetchRecords","handleLogout","removeItem","clearData","process","env","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":"mUAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,WAAP,EAAqBC,YAArB,KAAwC,oBAAxC,C,2CAEA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC3B,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,MAAD,CAAY,CACnCC,KAAK,CAACD,MAAD,CAAL,CACH,CAFD,CAGA,GAAME,CAAAA,kBAAkB,0FAAG,kBAAOC,UAAP,4IACjBC,IADiB,CACVC,IAAI,CAACC,SAAL,CAAeH,UAAU,CAAC,YAAD,CAAzB,CADU,CAEvBI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BJ,IAA7B,EACAN,KAAK,CAACW,OAAN,CAAcJ,IAAI,CAACK,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,CAAd,EAGMC,YANiB,CAMF,CACjBC,MAAM,CAAE,MADS,CAEjBC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAFQ,CAGjBC,IAAI,CAAEV,IAAI,CAACC,SAAL,CAAeF,IAAf,CAHW,CANE,wBAWjBY,CAAAA,KAAK,CAAC,6BAAD,CAAgCJ,YAAhC,CAAL,CACDK,IADC,2FACI,iBAAMC,QAAN,kKACIC,MADJ,wBACaD,QAAQ,CAACJ,OAAT,CAAiBM,GAAjB,CAAqB,cAArB,CADb,gDACa,sBAAsCC,QAAtC,CAA+C,kBAA/C,CADb,aAEWF,MAFX,+DAE2BD,CAAAA,QAAQ,CAACI,IAAT,EAF3B,yCAEIC,IAFJ,gBAKGL,QAAQ,CAACM,EALZ,0BAME;AACMC,KAPR,CAOiBF,IAAI,EAAIA,IAAI,CAACG,OAAd,EAA0BR,QAAQ,CAACS,MAPnD,iCAQSC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CART,yDADJ,kEAYDK,KAZC,CAYK,SAAAL,KAAK,CAAI,CACZxB,KAAK,CAAC,oBAAD,CAAuBwB,KAAvB,CAAL,CACH,CAdC,CAXiB,QA0BvB3B,KAAK,CAACiC,YAAN,CAAmB1B,IAAI,CAACK,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,CAAnB,EA1BuB,wDAAH,kBAAlBT,CAAAA,kBAAkB,4CAAxB,CA4BA,GAAM8B,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBzB,YAAY,CAAC0B,UAAb,CAAwB,MAAxB,EACAnC,KAAK,CAACW,OAAN,CAAc,IAAd,EACAX,KAAK,CAACoC,SAAN,GACH,CAJD,CAKA,mBACI,YAAK,SAAS,CAAE,cAAhB,UAEQpC,KAAK,CAACM,IAAN,cACQ,KAAC,YAAD,EACI,QAAQ,CAAE+B,OAAO,CAACC,GAAR,CAAYC,0BAD1B,CAEI,UAAU,UAFd,CAGI,eAAe,CAAEL,YAHrB,CAII,YAAY,CAAE,oBAJlB,CAKI,SAAS,CAAE,MALf,EADR,cAUI,KAAC,WAAD,EAAa,QAAQ,CAAEG,OAAO,CAACC,GAAR,CAAYC,0BAAnC,CACa,UAAU,CAAE,QADzB,CAEa,SAAS,CAAEnC,kBAFxB,CAGa,SAAS,CAAEH,kBAHxB,CAIa,YAAY,CAAE,oBAJ3B,CAKa,SAAS,CAAE,MALxB,EAZZ,EADJ,CA0BH,CAED,cAAeF,CAAAA,cAAf","sourcesContent":["import {useState} from 'react';\nimport GoogleLogin, {GoogleLogout} from \"react-google-login\";\n\nfunction Authentication(props) {\n    const handleLoginFailure = (result) => {\n        alert(result);\n    }\n    const handleLoginSuccess = async (googleData) => {\n        const user = JSON.stringify(googleData['profileObj'])\n        localStorage.setItem('user', user);\n        props.setUser(JSON.parse(localStorage.getItem('user')));\n\n\n        const loginOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(user)\n        };\n        await fetch('http://localhost:5050/login', loginOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n            })\n            .catch(error => {\n                alert(\"error logging in: \", error)\n            });\n        props.fetchRecords(JSON.parse(localStorage.getItem('user')));\n    }\n    const handleLogout = () => {\n        localStorage.removeItem('user');\n        props.setUser(null);\n        props.clearData();\n    }\n    return (\n        <div className={\"options-item\"}>\n            {\n                props.user ? (\n                        <GoogleLogout\n                            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                            buttonText={`Log Out`}\n                            onLogoutSuccess={handleLogout}\n                            cookiePolicy={'single_host_origin'}\n                            className={\"auth\"}>\n\n                        </GoogleLogout>\n                    ) :\n                    <GoogleLogin clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                                 buttonText={\"Log In\"}\n                                 onSuccess={handleLoginSuccess}\n                                 onFailure={handleLoginFailure}\n                                 cookiePolicy={'single_host_origin'}\n                                 className={\"auth\"}>\n\n                    </GoogleLogin>\n\n            }\n\n        </div>\n    );\n}\n\nexport default Authentication;\n"]},"metadata":{},"sourceType":"module"}
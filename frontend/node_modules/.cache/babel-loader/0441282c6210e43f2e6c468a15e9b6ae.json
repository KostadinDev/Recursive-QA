{"ast":null,"code":"import _asyncToGenerator from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createClass from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _regeneratorRuntime from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,useReducer}from'react';import QAItems from\"./QAItems\";import QACard from\"./QACard\";import'./qacontainer.style.css';import NextButton from\"./NextButton\";import'@fontsource/roboto/300.css';import'@fontsource/roboto/400.css';import'@fontsource/roboto/500.css';import'@fontsource/roboto/700.css';import Instructions from\"./Instructions\";import SubmitButton from\"./SubmitButton\";import FlagButton from\"./FlagButton\";import RemoveButton from\"./RemoveButton\";import SkipButton from\"./SkipButton\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Segment=/*#__PURE__*/_createClass(function Segment(text,template,startingIndex,parent){_classCallCheck(this,Segment);this.text=text;this.type=null;this.children=[];this.relation=null;this.startingIndex=startingIndex;this.endingIndex=startingIndex+text.length;this.parent=parent;this.template=template;});var Relation=/*#__PURE__*/_createClass(function Relation(qnode,anode,type){_classCallCheck(this,Relation);this.qnode=qnode;this.anode=anode;this.type=type;});var Tree=/*#__PURE__*/function(){function Tree(root){_classCallCheck(this,Tree);this.root=root;this.ordering=[root];}_createClass(Tree,[{key:\"current\",get:function get(){return this.ordering.length?this.ordering[0]:null;}},{key:\"annotation\",get:function get(){var serializeNode=function serializeNode(node,serializedChildren){return{\"text\":node.text,\"type\":node.type,\"children\":serializedChildren,\"relation\":node.relation?node.relation.type:null,\"startingIndex\":node.startingIndex,\"endingIndex\":node.endingIndex,\"template\":node.template};};var traverseTree=function traverseTree(node){var children=[];if(node.children){for(var i=0;i<node.children.length;i++){children.push(traverseTree(node.children[i]));}}return serializeNode(node,children);};return traverseTree(this.root);//JSON.stringify(traverseTree(this.root));\n}},{key:\"pop\",value:function pop(){return this.ordering.shift();}},{key:\"insert\",value:function insert(children){this.ordering=children.concat(this.ordering);}}]);return Tree;}();function QAContainer(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),answers=_useState2[0],setAnswers=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questions=_useState4[0],setQuestions=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),tree=_useState6[0],setTree=_useState6[1];var workingTree;var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedQuestion=_useState8[0],setSelectedQuestion=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),selectedAnswer=_useState10[0],setSelectedAnswer=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),annotation=_useState12[0],setAnnotation=_useState12[1];var api=\"http://localhost:5050\";var submitRecord=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var d,options;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(props.scheduled&&props.scheduled[0])){_context2.next=12;break;}d=new Date();options={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({history:props.history,// rapid: props.mode,\nannotation:tree.annotation,record:props.scheduled[0].id,date:d.getTime()})};_context2.next=5;return fetch('http://localhost:5050/submit',options).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(response.ok){_context.next=2;break;}return _context.abrupt(\"return\",Promise.reject(response.status));case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}()).catch(function(error){alert(error);});case 5:if(!props.user){_context2.next=12;break;}_context2.next=8;return props.fetchRecords(props.user);case 8:props.scheduled.shift();props.setScheduled(props.scheduled);_context2.next=12;return onMount();case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function submitRecord(){return _ref.apply(this,arguments);};}();var removeRecord=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var options;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(props.scheduled&&props.scheduled[0])){_context4.next=11;break;}options={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({records:[props.scheduled[0].id]})};_context4.next=4;return fetch('http://localhost:5050/remove',options).then(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(response){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(response.ok){_context3.next=2;break;}return _context3.abrupt(\"return\",Promise.reject(response.status));case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref4.apply(this,arguments);};}()).catch(function(error){alert(error);});case 4:if(!props.user){_context4.next=11;break;}_context4.next=7;return props.fetchRecords(props.user);case 7:props.scheduled.shift();props.setScheduled(props.scheduled);_context4.next=11;return onMount();case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function removeRecord(){return _ref3.apply(this,arguments);};}();var skipRecord=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var options;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(props.scheduled&&props.scheduled[0])){_context6.next=11;break;}options={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({record:props.scheduled[0].id})};_context6.next=4;return fetch('http://localhost:5050/skip',options).then(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(response){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(response.ok){_context5.next=2;break;}return _context5.abrupt(\"return\",Promise.reject(response.status));case 2:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x3){return _ref6.apply(this,arguments);};}()).catch(function(error){alert(\"here?\");});case 4:if(!props.user){_context6.next=11;break;}_context6.next=7;return props.fetchRecords(props.user);case 7:props.scheduled.shift();props.setScheduled(props.scheduled);_context6.next=11;return onMount();case 11:case\"end\":return _context6.stop();}}},_callee6);}));return function skipRecord(){return _ref5.apply(this,arguments);};}();function updateSegments(question,answer){fetch(\"\".concat(api,\"/segments?sentence=\").concat(question)).then(function(res){return res.json();}).then(function(result){return result;},function(error){//TODO handle in case of segment retrieval error\n}).then(function(newSegments){return fetch(\"\".concat(api,\"/segments?sentence=\").concat(answer)).then(function(res){return res.json();}).then(function(result){newSegments=newSegments.concat(result);workingTree=tree;newSegments=newSegments.map(function(newSegment){return new Segment(newSegment.segment,newSegment.template,0,workingTree.current);});workingTree.current.children=newSegments;workingTree.current.relation=new Relation(newSegments[0],newSegments[1],null);workingTree.pop();workingTree.insert(newSegments);setTree(workingTree);return workingTree;},function(error){alert(error);});}).then(function(workingTree){props.setHistory([{'question':question,'answer':answer,'segment':workingTree.current.parent.text}].concat(props.history));setQuestions([]);setAnswers([]);setAnswers([]);return workingTree;}).then(function(workingTree){updateQuestions(workingTree.current);});};function updateQuestions(segment){if(segment){fetch(\"\".concat(api,\"/questions?segment=\").concat(segment['text'])).then(function(res){return res.json();}).then(function(result){if(result){setQuestions(result['questions']);}},function(error){alert(error);});}}function handleSelectQuestion(chosenQuestion){setSelectedQuestion(chosenQuestion);if(tree&&tree.current){fetch(\"\".concat(api,\"/answers?segment=\").concat(tree.current['text'],\"&question=\").concat(chosenQuestion,\"\\n            &template=\").concat(tree.current['template'])).then(function(res){return res.json();}).then(function(result){setAnswers(result['answers']);},function(error){//TODO handle in case of answer retrieval error\n});}}function handleSelectAnswer(chosenAnswer){setSelectedAnswer(chosenAnswer);addAnnotation(selectedQuestion,chosenAnswer);updateSegments(selectedQuestion,chosenAnswer);}function getRelation(question,answer){// TODO Implelement this\nreturn null;}function addAnnotation(question,answer){// TODO TEST THIS\nvar relation=getRelation(question,answer);setAnnotation(annotation.concat([[question,answer,relation]]));}function continueRecord(){workingTree=tree;if(workingTree){if(workingTree.ordering.length>=2){workingTree.pop();workingTree.pop();}else if(workingTree.ordering.length>=1){workingTree.pop();}setTree(workingTree);setQuestions([]);setAnswers([]);updateQuestions(workingTree.current);}}var onMount=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var newSegments,newQuestions,root;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!(props.scheduled&&props.scheduled[0])){_context7.next=17;break;}setQuestions([]);setAnswers([]);props.setHistory([]);_context7.next=6;return fetch(\"\".concat(api,\"/segments?sentence=\").concat(props.scheduled[0].sentence)).then(function(res){return res.json();}).then(function(result){return result;},function(error){alert(error);});case 6:newSegments=_context7.sent;root=new Segment(props.scheduled[0].sentence,0,0,null);workingTree=new Tree(root);newSegments=newSegments.map(function(newSegment){return new Segment(newSegment.segment,newSegment.template,0,workingTree.current);});workingTree.current.children=newSegments;if(newSegments.length==2){workingTree.current.relation=new Relation(newSegments[0],newSegments[1],\"if_else\");}workingTree.pop();workingTree.insert(newSegments);_context7.next=16;return setTree(workingTree);case 16:updateQuestions(workingTree.current);case 17:case\"end\":return _context7.stop();}}},_callee7);}));return function onMount(){return _ref7.apply(this,arguments);};}();useEffect(function(){onMount().catch();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"outside-qacontainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"qasentence\",children:props.scheduled&&props.scheduled[0]&&tree?/*#__PURE__*/_jsx(QACard,{scheduled:props.scheduled,sentence:props.scheduled[0]['sentence'],tree:tree}):\"\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){console.log(tree.annotation);},children:\" Button\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"qacontainer\",children:[/*#__PURE__*/_jsx(Instructions,{turnedOn:props.instructions,type:\"questions\"}),/*#__PURE__*/_jsx(QAItems,{items:questions,setItems:setQuestions,selectedItem:selectedQuestion,handleSelect:handleSelectQuestion,type:\"Questions\"}),/*#__PURE__*/_jsx(QAItems,{items:answers,setItems:setAnswers,selectedItem:selectedAnswer,handleSelect:handleSelectAnswer,type:\"Answers\"}),/*#__PURE__*/_jsx(Instructions,{turnedOn:props.instructions,type:\"answers\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"qa-button-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"qa-buttons\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"qa-button-group\",children:[/*#__PURE__*/_jsx(NextButton,{handleClick:continueRecord}),/*#__PURE__*/_jsx(SubmitButton,{submitRecord:submitRecord})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"qa-button-group\",children:[/*#__PURE__*/_jsx(SkipButton,{skipRecord:skipRecord}),/*#__PURE__*/_jsx(FlagButton,{scheduled:props.scheduled,fetchRecords:props.fetchRecords,user:props.user}),/*#__PURE__*/_jsx(RemoveButton,{removeRecord:removeRecord})]})]})}),/*#__PURE__*/_jsx(\"hr\",{})]});}export default QAContainer;","map":{"version":3,"sources":["/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/src/QAContainer/QAContainer.js"],"names":["React","useState","useEffect","useReducer","QAItems","QACard","NextButton","Instructions","SubmitButton","FlagButton","RemoveButton","SkipButton","Segment","text","template","startingIndex","parent","type","children","relation","endingIndex","length","Relation","qnode","anode","Tree","root","ordering","serializeNode","node","serializedChildren","traverseTree","i","push","shift","concat","QAContainer","props","answers","setAnswers","questions","setQuestions","tree","setTree","workingTree","selectedQuestion","setSelectedQuestion","selectedAnswer","setSelectedAnswer","annotation","setAnnotation","api","submitRecord","scheduled","d","Date","options","method","headers","body","JSON","stringify","history","record","id","date","getTime","fetch","then","response","ok","Promise","reject","status","catch","error","alert","user","fetchRecords","setScheduled","onMount","removeRecord","records","skipRecord","updateSegments","question","answer","res","json","result","newSegments","map","newSegment","segment","current","pop","insert","setHistory","updateQuestions","handleSelectQuestion","chosenQuestion","handleSelectAnswer","chosenAnswer","addAnnotation","getRelation","continueRecord","sentence","console","log","instructions"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport QAItems from \"./QAItems\";\nimport QACard from \"./QACard\";\nimport './qacontainer.style.css';\nimport NextButton from \"./NextButton\";\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Instructions from \"./Instructions\";\nimport SubmitButton from \"./SubmitButton\";\nimport FlagButton from \"./FlagButton\";\nimport RemoveButton from \"./RemoveButton\";\nimport SkipButton from \"./SkipButton\";\n\nclass Segment {\n    constructor(text, template, startingIndex, parent) {\n        this.text = text;\n        this.type = null;\n        this.children = [];\n        this.relation = null;\n        this.startingIndex = startingIndex;\n        this.endingIndex = startingIndex + text.length;\n        this.parent = parent;\n        this.template = template;\n    }\n}\n\nclass Relation {\n    constructor(qnode, anode, type) {\n        this.qnode = qnode;\n        this.anode = anode;\n        this.type = type;\n    }\n}\n\nclass Tree {\n    constructor(root) {\n        this.root = root;\n        this.ordering = [root];\n    }\n\n    get current() {\n        return this.ordering.length ? this.ordering[0] : null;\n    }\n    get annotation() {\n        let serializeNode = (node, serializedChildren) => {\n            return {\n                \"text\" : node.text,\n                \"type\" : node.type,\n                \"children\" : serializedChildren,\n                \"relation\" : node.relation?node.relation.type:null,\n                \"startingIndex\" : node.startingIndex,\n                \"endingIndex\" : node.endingIndex,\n                \"template\" : node.template,\n            }\n        }\n        let traverseTree = (node) => {\n            let children = [];\n            if (node.children) {\n                for (let i = 0; i < node.children.length; i++) {\n                    children.push(traverseTree(node.children[i]));\n                }\n            }\n            return serializeNode(node, children);\n        }\n        return traverseTree(this.root); //JSON.stringify(traverseTree(this.root));\n    }\n    pop() {\n        return this.ordering.shift();\n    }\n\n    insert(children) {\n        this.ordering = children.concat(this.ordering);\n    }\n}\n\n\nfunction QAContainer(props) {\n    const [answers, setAnswers] = useState([]);\n    const [questions, setQuestions] = useState([]);\n    const [tree, setTree] = useState();\n    let workingTree;\n\n    const [selectedQuestion, setSelectedQuestion] = useState(\"\");\n    const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n    const [annotation, setAnnotation] = useState([]);\n    const api = \"http://localhost:5050\";\n\n    const submitRecord = async () => {\n\n        // console.log(tree);\n\n        if (props.scheduled && props.scheduled[0]) {\n            const d = new Date();\n            const options = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    history: props.history,\n                    // rapid: props.mode,\n                    annotation: tree.annotation,\n                    record: props.scheduled[0].id,\n                    date: d.getTime(),\n                })\n            };\n            await fetch('http://localhost:5050/submit', options)\n                .then(async response => {\n                    if (!response.ok) {\n                        return Promise.reject(response.status);\n                    }\n                }).catch(error => {\n                    alert(error);\n                });\n            if (props.user) {\n                await props.fetchRecords(props.user);\n                props.scheduled.shift();\n                props.setScheduled(props.scheduled);\n                await onMount();\n            }\n        }\n    }\n    const removeRecord = async () => {\n        if (props.scheduled && props.scheduled[0]) {\n            const options = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({records: [props.scheduled[0].id]})\n            };\n            await fetch('http://localhost:5050/remove', options)\n                .then(async response => {\n                    if (!response.ok) {\n                        return Promise.reject(response.status);\n                    }\n                }).catch(error => {\n                    alert(error);\n                });\n            if (props.user) {\n                await props.fetchRecords(props.user);\n                props.scheduled.shift();\n                props.setScheduled(props.scheduled);\n                await onMount();\n            }\n        }\n    }\n    const skipRecord = async () => {\n\n        if (props.scheduled && props.scheduled[0]) {\n            const options = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({record: props.scheduled[0].id})\n            };\n            await fetch('http://localhost:5050/skip', options)\n                .then(async response => {\n                    if (!response.ok) {\n                        return Promise.reject(response.status);\n                    }\n                }).catch(error => {\n                    alert(\"here?\");\n                });\n            if (props.user) {\n                await props.fetchRecords(props.user);\n                props.scheduled.shift();\n                props.setScheduled(props.scheduled);\n                await onMount();\n            }\n        }\n    }\n\n    function updateSegments(question, answer) {\n        fetch(`${api}/segments?sentence=${question}`).then(res => res.json()).then((result) => {\n            return result;\n        }, (error) => {\n            //TODO handle in case of segment retrieval error\n        }).then((newSegments) =>\n            fetch(`${api}/segments?sentence=${answer}`).then(res => res.json()).then((result) => {\n                newSegments = newSegments.concat(result);\n                workingTree = tree\n                newSegments = newSegments.map((newSegment) => new Segment(newSegment.segment, newSegment.template, 0, workingTree.current))\n                workingTree.current.children = newSegments\n                workingTree.current.relation = new Relation(newSegments[0], newSegments[1], null);\n                workingTree.pop()\n                workingTree.insert(newSegments)\n                setTree(workingTree);\n                return workingTree;\n            }, (error) => {\n                alert(error);\n            })\n        ).then((workingTree) => {\n            props.setHistory([{\n                'question': question,\n                'answer': answer,\n                'segment': workingTree.current.parent.text\n            }].concat(props.history))\n            setQuestions([]);\n            setAnswers([]);\n            setAnswers([]);\n            return workingTree\n        }).then((workingTree) => {\n            updateQuestions(workingTree.current);\n        });\n    };\n\n    function updateQuestions(segment) {\n        if (segment) {\n            fetch(`${api}/questions?segment=${segment['text']}`).then(res => res.json()).then((result) => {\n                if (result) {\n                    setQuestions(result['questions']);\n                }\n            }, (error) => {\n                alert(error)\n            });\n        }\n    }\n\n    function handleSelectQuestion(chosenQuestion) {\n        setSelectedQuestion(chosenQuestion);\n        if (tree && tree.current) {\n            fetch(`${api}/answers?segment=${tree.current['text']}&question=${chosenQuestion}\n            &template=${tree.current['template']}`).then(res => res.json()).then((result) => {\n                setAnswers(result['answers']);\n            }, (error) => {\n                //TODO handle in case of answer retrieval error\n            })\n        }\n\n    }\n\n    function handleSelectAnswer(chosenAnswer) {\n        setSelectedAnswer(chosenAnswer);\n        addAnnotation(selectedQuestion, chosenAnswer);\n        updateSegments(selectedQuestion, chosenAnswer);\n\n    }\n\n    function getRelation(question, answer) {\n        // TODO Implelement this\n        return null;\n    }\n\n    function addAnnotation(question, answer) {\n        // TODO TEST THIS\n        const relation = getRelation(question, answer);\n        setAnnotation(annotation.concat([[question, answer, relation]]));\n    }\n\n    function continueRecord() {\n        workingTree = tree;\n        if (workingTree) {\n            if (workingTree.ordering.length >= 2) {\n                workingTree.pop();\n                workingTree.pop();\n            } else if (workingTree.ordering.length >= 1) {\n                workingTree.pop();\n            }\n            setTree(workingTree);\n            setQuestions([]);\n            setAnswers([]);\n            updateQuestions(workingTree.current);\n        }\n    }\n\n\n    const onMount = async () => {\n        if (props.scheduled && props.scheduled[0]) {\n            setQuestions([]);\n            setAnswers([]);\n            props.setHistory([])\n            let newSegments, newQuestions, root;\n            newSegments = await fetch(`${api}/segments?sentence=${props.scheduled[0].sentence}`)\n                .then(res => res.json())\n                .then((result) => {\n                    return result;\n                }, (error) => {\n                    alert(error);\n                });\n            root = new Segment(props.scheduled[0].sentence, 0, 0, null);\n            workingTree = new Tree(root);\n\n            newSegments = newSegments.map((newSegment) => new Segment(newSegment.segment, newSegment.template, 0, workingTree.current))\n\n            workingTree.current.children = newSegments;\n            if (newSegments.length == 2) {\n                workingTree.current.relation = new Relation(newSegments[0], newSegments[1], \"if_else\")\n            }\n            workingTree.pop();\n            workingTree.insert(newSegments)\n            await setTree(workingTree);\n            updateQuestions(workingTree.current);\n        }\n    }\n    useEffect(() => {\n        onMount().catch();\n    }, []);\n\n\n    return (<div className=\"outside-qacontainer\">\n            <div className='qasentence'>\n                {\n                    props.scheduled && props.scheduled[0] && tree ?\n\n                        <QACard scheduled={props.scheduled} sentence={props.scheduled[0]['sentence']}\n                                tree={tree}/> : \"\"\n                }\n            </div>\n            <hr/>\n            <button onClick={() => {\n                console.log(tree.annotation);\n            }}> Button\n            </button>\n            <div className='qacontainer'>\n                <Instructions turnedOn={props.instructions} type='questions'/>\n                <QAItems items={questions} setItems={setQuestions} selectedItem={selectedQuestion}\n                         handleSelect={handleSelectQuestion} type={\"Questions\"}/>\n                <QAItems items={answers} setItems={setAnswers} selectedItem={selectedAnswer}\n                         handleSelect={handleSelectAnswer} type={\"Answers\"}/>\n                <Instructions turnedOn={props.instructions} type='answers'/>\n            </div>\n            <div className={\"qa-button-container\"}>\n                <div className='qa-buttons'>\n                    <div className=\"qa-button-group\">\n                        <NextButton handleClick={continueRecord}/>\n                        <SubmitButton submitRecord={submitRecord}/>\n                    </div>\n                    <div className=\"qa-button-group\">\n                        <SkipButton skipRecord={skipRecord}/>\n                        <FlagButton scheduled={props.scheduled} fetchRecords={props.fetchRecords} user={props.user}/>\n                        <RemoveButton removeRecord={removeRecord}/>\n                    </div>\n                </div>\n            </div>\n            <hr/>\n        </div>\n    );\n}\n\n\nexport default QAContainer;\n"]},"metadata":{},"sourceType":"module"}
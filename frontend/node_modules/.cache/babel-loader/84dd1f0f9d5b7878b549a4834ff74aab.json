{"ast":null,"code":"import Stack from'@mui/material/Stack';import ToggleButton from'@mui/material/ToggleButton';import ToggleButtonGroup from'@mui/material/ToggleButtonGroup';import{useState}from'react';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Mode(props){var handleAlignment=function handleAlignment(event,newMode){if(newMode!==null){// console.log(\"hello\", props.records, props.setScheduled)\n// props.setScheduled(props.records.filter((record) => \"scheduled\" in record && record['scheduled'] === true));\nprops.setMode(newMode);localStorage.setItem('mode',newMode);}};return/*#__PURE__*/_jsx(\"div\",{className:\"options-item\",children:/*#__PURE__*/_jsx(Stack,{direction:\"row\",spacing:4,children:/*#__PURE__*/_jsxs(ToggleButtonGroup,{value:props.mode,exclusive:true,onChange:handleAlignment,\"aria-label\":\"text alignment\",color:\"primary\",size:\"small\",children:[/*#__PURE__*/_jsx(ToggleButton,{value:\"tool\",\"aria-label\":\"left aligned\",sx:{color:\"white\",textTransform:\"unset\",fontSize:16},children:/*#__PURE__*/_jsx(_Fragment,{children:\"Tool\"})}),/*#__PURE__*/_jsx(ToggleButton,{value:\"data\",\"aria-label\":\"centered\",sx:{color:\"white\",textTransform:\"unset\",fontSize:16},children:/*#__PURE__*/_jsx(_Fragment,{children:\"Data\"})})]})})});}export default Mode;","map":{"version":3,"sources":["/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/src/Navigation/Mode.js"],"names":["Stack","ToggleButton","ToggleButtonGroup","useState","Mode","props","handleAlignment","event","newMode","setMode","localStorage","setItem","mode","color","textTransform","fontSize"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,iCAA9B,CACA,OAAQC,QAAR,KAAuB,OAAvB,C,6IAEA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAGjB,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,OAAR,CAAoB,CACxC,GAAIA,OAAO,GAAK,IAAhB,CAAsB,CAClB;AACA;AACAH,KAAK,CAACI,OAAN,CAAcD,OAAd,EACAE,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BH,OAA7B,EACH,CACJ,CAPD,CASA,mBACI,YAAK,SAAS,CAAC,cAAf,uBACI,KAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,OAAO,CAAE,CAAhC,uBACI,MAAC,iBAAD,EACI,KAAK,CAAEH,KAAK,CAACO,IADjB,CAEI,SAAS,KAFb,CAGI,QAAQ,CAAEN,eAHd,CAII,aAAW,gBAJf,CAKI,KAAK,CAAE,SALX,CAMI,IAAI,CAAG,OANX,wBASI,KAAC,YAAD,EAAc,KAAK,CAAC,MAApB,CAA2B,aAAW,cAAtC,CACc,EAAE,CAAE,CAACO,KAAK,CAAE,OAAR,CAAiBC,aAAa,CAAE,OAAhC,CAAyCC,QAAQ,CAAC,EAAlD,CADlB,uBAEI,iCAFJ,EATJ,cAaI,KAAC,YAAD,EAAc,KAAK,CAAC,MAApB,CAA2B,aAAW,UAAtC,CAAiD,EAAE,CAAE,CAACF,KAAK,CAAE,OAAR,CAAiBC,aAAa,CAAE,OAAhC,CAAyCC,QAAQ,CAAC,EAAlD,CAArD,uBACI,iCADJ,EAbJ,GADJ,EADJ,EADJ,CAwBH,CAED,cAAeX,CAAAA,IAAf","sourcesContent":["import Stack from '@mui/material/Stack';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport {useState} from 'react';\n\nfunction Mode(props) {\n\n\n    const handleAlignment = (event, newMode) => {\n        if (newMode !== null) {\n            // console.log(\"hello\", props.records, props.setScheduled)\n            // props.setScheduled(props.records.filter((record) => \"scheduled\" in record && record['scheduled'] === true));\n            props.setMode(newMode);\n            localStorage.setItem('mode', newMode);\n        }\n    };\n\n    return (\n        <div className=\"options-item\">\n            <Stack direction=\"row\" spacing={4}>\n                <ToggleButtonGroup\n                    value={props.mode}\n                    exclusive\n                    onChange={handleAlignment}\n                    aria-label=\"text alignment\"\n                    color={\"primary\"}\n                    size = 'small'\n\n                >\n                    <ToggleButton value=\"tool\" aria-label=\"left aligned\"\n                                  sx={{color: \"white\", textTransform: \"unset\", fontSize:16}}>\n                        <>Tool</>\n                    </ToggleButton>\n                    <ToggleButton value=\"data\" aria-label=\"centered\" sx={{color: \"white\", textTransform: \"unset\", fontSize:16}}>\n                        <>Data</>\n                    </ToggleButton>\n                </ToggleButtonGroup>\n\n            </Stack>\n        </div>\n    );\n}\n\nexport default Mode;\n"]},"metadata":{},"sourceType":"module"}
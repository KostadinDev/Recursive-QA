{"ast":null,"code":"import _asyncToGenerator from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/node_modules/@babel/runtime/regenerator/index.js\";import*as React from'react';import PublishIcon from'@mui/icons-material/Publish';import Button from'@mui/material/Button';import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ImportButton(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),file=_useState2[0],setFile=_useState2[1];var sentences=null;var onFileChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setFile(event.target.files[0]);uploadFile(event.target.files[0]);case 2:case\"end\":return _context.stop();}}},_callee);}));return function onFileChange(_x){return _ref.apply(this,arguments);};}();function parseText(loadedFile){return new Promise(function(resolve){var reader=new FileReader();reader.onload=function(event){var text=event.target.result;sentences=text.split('\\n');console.log(sentences);resolve(sentences);};reader.readAsText(loadedFile);});}function uploadFile(_x2){return _uploadFile.apply(this,arguments);}function _uploadFile(){_uploadFile=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(loadedFile){var requestOptions;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return parseText(loadedFile);case 2:if(!props.user){_context3.next=9;break;}requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({user:props.user,sentences:sentences})};_context3.next=6;return fetch('http://localhost:5050/upload',requestOptions).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response){var _response$headers$get;var isJson,data,error;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:isJson=(_response$headers$get=response.headers.get('content-type'))===null||_response$headers$get===void 0?void 0:_response$headers$get.includes('application/json');_context2.t0=isJson;if(!_context2.t0){_context2.next=6;break;}_context2.next=5;return response.json();case 5:_context2.t0=_context2.sent;case 6:data=_context2.t0;if(response.ok){_context2.next=10;break;}// get error message from body or default to response status\nerror=data&&data.message||response.status;return _context2.abrupt(\"return\",Promise.reject(error));case 10:console.log(\"received data: \",data);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref2.apply(this,arguments);};}()).catch(function(error){console.error('There was an error!',error);});case 6:props.fetchRecords(props.user);_context3.next=10;break;case 9:alert(\"Please log in before uploading data.\");case 10:case\"end\":return _context3.stop();}}},_callee3);}));return _uploadFile.apply(this,arguments);}return/*#__PURE__*/_jsx(\"div\",{className:\"medium-opacity options-item\",children:/*#__PURE__*/_jsxs(Button,{variant:\"outlined\",component:\"label\",children:[/*#__PURE__*/_jsx(PublishIcon,{sx:{width:20,mr:1}}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:\"Import\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",hidden:true,onChange:onFileChange})]})});}","map":{"version":3,"sources":["/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/src/Navigation/ImportButton.js"],"names":["React","PublishIcon","Button","useState","ImportButton","props","file","setFile","sentences","onFileChange","event","target","files","uploadFile","parseText","loadedFile","Promise","resolve","reader","FileReader","onload","text","result","split","console","log","readAsText","user","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","isJson","get","includes","json","data","ok","error","message","status","reject","catch","fetchRecords","alert","width","mr"],"mappings":"meAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAAQC,QAAR,KAAuB,OAAvB,C,wFAEA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACxC,cAAwBF,QAAQ,EAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,GAAIC,CAAAA,SAAS,CAAG,IAAhB,CACA,GAAMC,CAAAA,YAAY,0FAAG,iBAAMC,KAAN,kHACjBH,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAP,CACAC,UAAU,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAV,CAFiB,sDAAH,kBAAZH,CAAAA,YAAY,4CAAlB,CAMA,QAASK,CAAAA,SAAT,CAAmBC,UAAnB,CAA+B,CAC3B,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAAAC,OAAO,CAAI,CAC1B,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,MAAP,CAAgB,SAACV,KAAD,CAAW,CACvB,GAAIW,CAAAA,IAAI,CAAGX,KAAK,CAACC,MAAN,CAAaW,MAAxB,CACAd,SAAS,CAAGa,IAAI,CAACE,KAAL,CAAW,IAAX,CAAZ,CACAC,OAAO,CAACC,GAAR,CAAYjB,SAAZ,EACAS,OAAO,CAACT,SAAD,CAAP,CACH,CALD,CAMAU,MAAM,CAACQ,UAAP,CAAkBX,UAAlB,EACH,CATM,CAAP,CAUH,CApBuC,QAsBzBF,CAAAA,UAtByB,2IAsBxC,kBAA0BE,UAA1B,gKACUD,CAAAA,SAAS,CAACC,UAAD,CADnB,YAEQV,KAAK,CAACsB,IAFd,0BAGcC,cAHd,CAG+B,CACnBC,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAFU,CAGnBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACN,IAAI,CAAEtB,KAAK,CAACsB,IAAb,CAAmBnB,SAAS,CAAEA,SAA9B,CAAf,CAHa,CAH/B,wBAQc0B,CAAAA,KAAK,CAAC,8BAAD,CAAiCN,cAAjC,CAAL,CACDO,IADC,2FACI,kBAAMC,QAAN,sKACIC,MADJ,wBACaD,QAAQ,CAACN,OAAT,CAAiBQ,GAAjB,CAAqB,cAArB,CADb,gDACa,sBAAsCC,QAAtC,CAA+C,kBAA/C,CADb,cAEWF,MAFX,kEAE2BD,CAAAA,QAAQ,CAACI,IAAT,EAF3B,2CAEIC,IAFJ,iBAKGL,QAAQ,CAACM,EALZ,2BAME;AACMC,KAPR,CAOiBF,IAAI,EAAIA,IAAI,CAACG,OAAd,EAA0BR,QAAQ,CAACS,MAPnD,kCAQS7B,OAAO,CAAC8B,MAAR,CAAeH,KAAf,CART,UAWFnB,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BgB,IAA/B,EAXE,yDADJ,kEAcDM,KAdC,CAcK,SAAAJ,KAAK,CAAI,CACZnB,OAAO,CAACmB,KAAR,CAAc,qBAAd,CAAqCA,KAArC,EACH,CAhBC,CARd,QAyBQtC,KAAK,CAAC2C,YAAN,CAAmB3C,KAAK,CAACsB,IAAzB,EAzBR,+BA2BQsB,KAAK,CAAC,sCAAD,CAAL,CA3BR,yDAtBwC,6CAsDxC,mBACI,YAAK,SAAS,CAAC,6BAAf,uBACI,MAAC,MAAD,EACI,OAAO,CAAC,UADZ,CAEI,SAAS,CAAC,OAFd,wBAII,KAAC,WAAD,EAAa,EAAE,CAAE,CAACC,KAAK,CAAE,EAAR,CAAYC,EAAE,CAAE,CAAhB,CAAjB,EAJJ,cAKI,YAAK,SAAS,CAAC,EAAf,oBALJ,cAMI,cACI,IAAI,CAAC,MADT,CAEI,MAAM,KAFV,CAGI,QAAQ,CAAE1C,YAHd,EANJ,GADJ,EADJ,CAgBH","sourcesContent":["import * as React from 'react';\nimport PublishIcon from '@mui/icons-material/Publish';\nimport Button from '@mui/material/Button';\nimport {useState} from \"react\";\n\nexport default function ImportButton(props) {\n    const [file, setFile] = useState()\n    let sentences = null;\n    const onFileChange = async event => {\n        setFile(event.target.files[0]);\n        uploadFile(event.target.files[0]);\n    };\n\n\n    function parseText(loadedFile) {\n        return new Promise(resolve => {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                let text = event.target.result;\n                sentences = text.split('\\n');\n                console.log(sentences);\n                resolve(sentences);\n            };\n            reader.readAsText(loadedFile);\n        });\n    }\n\n    async function uploadFile(loadedFile) {\n        await parseText(loadedFile);\n        if (props.user) {\n            const requestOptions = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({user: props.user, sentences: sentences})\n            };\n            await fetch('http://localhost:5050/upload', requestOptions)\n                .then(async response => {\n                    const isJson = response.headers.get('content-type')?.includes('application/json');\n                    const data = isJson && await response.json();\n\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    }\n\n                    console.log(\"received data: \", data);\n                })\n                .catch(error => {\n                    console.error('There was an error!', error);\n                });\n            props.fetchRecords(props.user);\n        } else {\n            alert(\"Please log in before uploading data.\");\n        }\n\n    }\n\n    return (\n        <div className=\"medium-opacity options-item\">\n            <Button\n                variant=\"outlined\"\n                component=\"label\"\n            >\n                <PublishIcon sx={{width: 20, mr: 1}}/>\n                <div className=\"\">Import</div>\n                <input\n                    type=\"file\"\n                    hidden\n                    onChange={onFileChange}\n                />\n            </Button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}
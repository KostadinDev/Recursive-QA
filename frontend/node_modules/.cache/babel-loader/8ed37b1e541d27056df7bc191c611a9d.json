{"ast":null,"code":"/** MultilineChart.js */import React from\"react\";import*as d3 from\"d3\";// Copyright 2021 Observable, Inc.\n// Released under the ISC license.\n// https://observablehq.com/@d3/tree\nimport{jsx as _jsx}from\"react/jsx-runtime\";function Tree(data){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},path=_ref.path,_ref$id=_ref.id,id=_ref$id===void 0?Array.isArray(data)?function(d){return d.id;}:null:_ref$id,_ref$parentId=_ref.parentId,parentId=_ref$parentId===void 0?Array.isArray(data)?function(d){return d.parentId;}:null:_ref$parentId,children=_ref.children,_ref$tree=_ref.tree,tree=_ref$tree===void 0?d3.tree:_ref$tree,sort=_ref.sort,label=_ref.label,title=_ref.title,link=_ref.link,_ref$linkTarget=_ref.linkTarget,linkTarget=_ref$linkTarget===void 0?\"_blank\":_ref$linkTarget,_ref$width=_ref.width,width=_ref$width===void 0?640:_ref$width,height=_ref.height,_ref$r=_ref.r,r=_ref$r===void 0?3:_ref$r,_ref$padding=_ref.padding,padding=_ref$padding===void 0?1:_ref$padding,_ref$fill=_ref.fill,fill=_ref$fill===void 0?\"#999\":_ref$fill,fillOpacity=_ref.fillOpacity,_ref$stroke=_ref.stroke,stroke=_ref$stroke===void 0?\"#555\":_ref$stroke,_ref$strokeWidth=_ref.strokeWidth,strokeWidth=_ref$strokeWidth===void 0?1.5:_ref$strokeWidth,_ref$strokeOpacity=_ref.strokeOpacity,strokeOpacity=_ref$strokeOpacity===void 0?0.4:_ref$strokeOpacity,strokeLinejoin=_ref.strokeLinejoin,strokeLinecap=_ref.strokeLinecap,_ref$halo=_ref.halo,halo=_ref$halo===void 0?\"#fff\":_ref$halo,_ref$haloWidth=_ref.haloWidth,haloWidth=_ref$haloWidth===void 0?3:_ref$haloWidth;// If id and parentId options are specified, or the path option, use d3.stratify\n// to convert tabular data to a hierarchy; otherwise we assume that the data is\n// specified as an object {children} with nested objects (a.k.a. the “flare.json”\n// format), and use d3.hierarchy.\nvar root=path!=null?d3.stratify().path(path)(data):id!=null||parentId!=null?d3.stratify().id(id).parentId(parentId)(data):d3.hierarchy(data,children);// Compute labels and titles.\nvar descendants=root.descendants();var L=label==null?null:descendants.map(function(d){return label(d.data,d);});// Sort the nodes.\nif(sort!=null)root.sort(sort);// Compute the layout.\nvar dx=10;var dy=width/(root.height+padding);tree().nodeSize([dx,dy])(root);// Center the tree.\nvar x0=Infinity;var x1=-x0;root.each(function(d){if(d.x>x1)x1=d.x;if(d.x<x0)x0=d.x;});// Compute the default height.\nif(height===undefined)height=x1-x0+dx*2;var svg=d3.create(\"svg\").attr(\"viewBox\",[-dy*padding/2,x0-dx,width,height]).attr(\"width\",width).attr(\"height\",height).attr(\"style\",\"max-width: 100%; height: auto; height: intrinsic;\").attr(\"font-family\",\"sans-serif\").attr(\"font-size\",10);svg.append(\"g\").attr(\"fill\",\"none\").attr(\"stroke\",stroke).attr(\"stroke-opacity\",strokeOpacity).attr(\"stroke-linecap\",strokeLinecap).attr(\"stroke-linejoin\",strokeLinejoin).attr(\"stroke-width\",strokeWidth).selectAll(\"path\").data(root.links()).join(\"path\").attr(\"d\",d3.linkHorizontal().x(function(d){return d.y;}).y(function(d){return d.x;}));var node=svg.append(\"g\").selectAll(\"a\").data(root.descendants()).join(\"a\").attr(\"xlink:href\",link==null?null:function(d){return link(d.data,d);}).attr(\"target\",link==null?null:linkTarget).attr(\"transform\",function(d){return\"translate(\".concat(d.y,\",\").concat(d.x,\")\");});node.append(\"circle\").attr(\"fill\",function(d){return d.children?stroke:fill;}).attr(\"r\",r);if(title!=null)node.append(\"title\").text(function(d){return title(d.data,d);});if(L)node.append(\"text\").attr(\"dy\",\"0.32em\").attr(\"x\",function(d){return d.children?-6:6;}).attr(\"text-anchor\",function(d){return d.children?\"end\":\"start\";}).text(function(d,i){return L[i];}).call(function(text){return text.clone(true);}).attr(\"fill\",\"none\").attr(\"stroke\",halo).attr(\"stroke-width\",haloWidth);return svg.node();}export default function TreeGraph(){var chart=Tree({\"text\":\"idk\",children:[{\"text\":\"dog\"},{\"text\":\"cat\"}]},{label:function label(d){return d.name;},title:function title(d,n){return\"\".concat(n.ancestors().reverse().map(function(d){return d.data.name;}).join(\".\"));},// hover text\nlink:function link(d,n){return n.children?\"https://github.com/prefuse/Flare/tree/master/flare/src/\".concat(n.ancestors().reverse().map(function(d){return d.data.name;}).join(\"/\")):\"https://github.com/prefuse/Flare/blob/master/flare/src/\".concat(n.ancestors().reverse().map(function(d){return d.data.name;}).join(\"/\"),\".as\");},width:1152});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:chart})});}","map":{"version":3,"sources":["/Users/kostadindev/PycharmProjects/rfc_qa_generation/recursive-qa/frontend/src/DataTab/TreeGraph.js"],"names":["React","d3","Tree","data","path","id","Array","isArray","d","parentId","children","tree","sort","label","title","link","linkTarget","width","height","r","padding","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","strokeLinejoin","strokeLinecap","halo","haloWidth","root","stratify","hierarchy","descendants","L","map","dx","dy","nodeSize","x0","Infinity","x1","each","x","undefined","svg","create","attr","append","selectAll","links","join","linkHorizontal","y","node","text","i","call","clone","TreeGraph","chart","name","n","ancestors","reverse"],"mappings":"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","sourcesContent":["/** MultilineChart.js */\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\n// Copyright 2021 Observable, Inc.\n// Released under the ISC license.\n// https://observablehq.com/@d3/tree\nfunction Tree(data, { // data is either tabular (array of objects) or hierarchy (nested objects)\n    path, // as an alternative to id and parentId, returns an array identifier, imputing internal nodes\n    id = Array.isArray(data) ? d => d.id : null, // if tabular data, given a d in data, returns a unique identifier (string)\n    parentId = Array.isArray(data) ? d => d.parentId : null, // if tabular data, given a node d, returns its parent’s identifier\n    children, // if hierarchical data, given a d in data, returns its children\n    tree = d3.tree, // layout algorithm (typically d3.tree or d3.cluster)\n    sort, // how to sort nodes prior to layout (e.g., (a, b) => d3.descending(a.height, b.height))\n    label, // given a node d, returns the display name\n    title, // given a node d, returns its hover text\n    link, // given a node d, its link (if any)\n    linkTarget = \"_blank\", // the target attribute for links (if any)\n    width = 640, // outer width, in pixels\n    height, // outer height, in pixels\n    r = 3, // radius of nodes\n    padding = 1, // horizontal padding for first and last column\n    fill = \"#999\", // fill for nodes\n    fillOpacity, // fill opacity for nodes\n    stroke = \"#555\", // stroke for links\n    strokeWidth = 1.5, // stroke width for links\n    strokeOpacity = 0.4, // stroke opacity for links\n    strokeLinejoin, // stroke line join for links\n    strokeLinecap, // stroke line cap for links\n    halo = \"#fff\", // color of label halo\n    haloWidth = 3, // padding around the labels\n} = {}) {\n\n    // If id and parentId options are specified, or the path option, use d3.stratify\n    // to convert tabular data to a hierarchy; otherwise we assume that the data is\n    // specified as an object {children} with nested objects (a.k.a. the “flare.json”\n    // format), and use d3.hierarchy.\n    const root = path != null ? d3.stratify().path(path)(data)\n        : id != null || parentId != null ? d3.stratify().id(id).parentId(parentId)(data)\n            : d3.hierarchy(data, children);\n\n    // Compute labels and titles.\n    const descendants = root.descendants();\n    const L = label == null ? null : descendants.map(d => label(d.data, d));\n\n    // Sort the nodes.\n    if (sort != null) root.sort(sort);\n\n    // Compute the layout.\n    const dx = 10;\n    const dy = width / (root.height + padding);\n    tree().nodeSize([dx, dy])(root);\n\n    // Center the tree.\n    let x0 = Infinity;\n    let x1 = -x0;\n    root.each(d => {\n        if (d.x > x1) x1 = d.x;\n        if (d.x < x0) x0 = d.x;\n    });\n\n    // Compute the default height.\n    if (height === undefined) height = x1 - x0 + dx * 2;\n\n    const svg = d3.create(\"svg\")\n        .attr(\"viewBox\", [-dy * padding / 2, x0 - dx, width, height])\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10);\n\n    svg.append(\"g\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", stroke)\n        .attr(\"stroke-opacity\", strokeOpacity)\n        .attr(\"stroke-linecap\", strokeLinecap)\n        .attr(\"stroke-linejoin\", strokeLinejoin)\n        .attr(\"stroke-width\", strokeWidth)\n        .selectAll(\"path\")\n        .data(root.links())\n        .join(\"path\")\n        .attr(\"d\", d3.linkHorizontal()\n            .x(d => d.y)\n            .y(d => d.x));\n\n    const node = svg.append(\"g\")\n        .selectAll(\"a\")\n        .data(root.descendants())\n        .join(\"a\")\n        .attr(\"xlink:href\", link == null ? null : d => link(d.data, d))\n        .attr(\"target\", link == null ? null : linkTarget)\n        .attr(\"transform\", d => `translate(${d.y},${d.x})`);\n\n    node.append(\"circle\")\n        .attr(\"fill\", d => d.children ? stroke : fill)\n        .attr(\"r\", r);\n\n    if (title != null) node.append(\"title\")\n        .text(d => title(d.data, d));\n\n    if (L) node.append(\"text\")\n        .attr(\"dy\", \"0.32em\")\n        .attr(\"x\", d => d.children ? -6 : 6)\n        .attr(\"text-anchor\", d => d.children ? \"end\" : \"start\")\n        .text((d, i) => L[i])\n        .call(text => text.clone(true))\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", halo)\n        .attr(\"stroke-width\", haloWidth);\n\n    return svg.node();\n}\n\n\nexport default function TreeGraph(){\n    let chart = Tree({\"text\": \"idk\", children:[{\"text\":\"dog\"}, {\"text\":\"cat\"}]}, {\n        label: d => d.name,\n        title: (d, n) => `${n.ancestors().reverse().map(d => d.data.name).join(\".\")}`, // hover text\n        link: (d, n) => n.children\n            ? `https://github.com/prefuse/Flare/tree/master/flare/src/${n.ancestors().reverse().map(d => d.data.name).join(\"/\")}`\n            : `https://github.com/prefuse/Flare/blob/master/flare/src/${n.ancestors().reverse().map(d => d.data.name).join(\"/\")}.as`,\n        width: 1152\n    })\n    return (\n        <div>\n         <img src = {chart}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}